//**********************************************************************
//*       DSNHSQL - COMPILE AND LINKEDIT A DB2 SQL PROCEDURE
//*
//DSNHSQL PROC WSPC=500,MEM=TEMPNAME,USER=USER,ECCSID=1047
//*
//*  Note: Steps PC and PCC must use the same CCSID setting
//*
//*  Note: The DD statements for SYSCIN in step PCC and SYSIN in step C
//*        currently specify temporary data sets.  If you want to use
//*        the Debug Tool, you need to override those DD statements to
//*        specify the name of a permanent data set.  That data set
//*        must have a record format of FB and logical record length of
//*        80 bytes.  When you execute the Debug Tool, you use that
//*        data set as the input.
//*
//*        Example of overriding PCC.SYSCIN and C.SYSIN:
//*
//*        //PH063S02 EXEC DSNHSQL,MEM=SQLP
//*        //PC.SYSIN   DD DISP=SHR,DSN=APPLDEV.SQLSRC(SQLP)
//*        //PCC.SYSCIN DD DISP=SHR,DSN=APPLDEV.DEBUG.TOOL.INPUT(SQLP)
//*        //C.SYSIN    DD DISP=SHR,DSN=APPLDEV.DEBUG.TOOL.INPUT(SQLP)
//*
//*********************************************************************
//* PC: Precompile the SQL Procedure source
//*********************************************************************
//PC      EXEC PGM=DSNHPC,
//             PARM='HOST(SQL),CCSID(&ECCSID)'
//STEPLIB  DD  DISP=SHR,DSN=DSN910.DB9G.SDSNEXIT
//         DD  DISP=SHR,DSN=DSN910.SDSNLOAD
//SYSPRINT DD  SYSOUT=*
//SYSTERM  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSCIN   DD  DSN=&&DSNHSQL,DISP=(MOD,PASS),UNIT=SYSDA,
//             SPACE=(800,(&WSPC,&WSPC))
//SYSLIB   DD  DISP=SHR,DSN=&USER..SRCLIB.DATA
//SYSUT1   DD  DUMMY  <-- simplified DDL to register SQL SP
//SYSUT2   DD  DUMMY  <-- DDL to register PSM SP (V6.1 and subsequent)
//*
//*********************************************************************
//* PCC: Precompile C source generated by the previous step
//*********************************************************************
//PCC     EXEC PGM=DSNHPC,
//             COND=(4,LT,PC),
//             PARM='HOST(C),MAR(1,80),CCSID(&ECCSID),TWOPASS'
//STEPLIB  DD  DISP=SHR,DSN=DSN910.DB9G.SDSNEXIT
//         DD  DISP=SHR,DSN=DSN910.SDSNLOAD
//DBRMLIB  DD  DISP=SHR,
//             DSN=&USER..DBRMLIB.DATA(&MEM)
//SYSPRINT DD  SYSOUT=*
//SYSTERM  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  DSN=&&DSNHSQL,DISP=(OLD,DELETE)
//SYSCIN   DD  DSN=&&DSNHOUT,DISP=(MOD,PASS),UNIT=SYSDA,
//             SPACE=(800,(&WSPC,&WSPC))
//SYSLIB   DD  DISP=SHR,DSN=&USER..SRCLIB.DATA
//SYSUT1   DD  SPACE=(800,(&WSPC,&WSPC),,,ROUND),UNIT=SYSDA
//SYSUT2   DD  SPACE=(800,(&WSPC,&WSPC),,,ROUND),UNIT=SYSDA
//*
//*********************************************************************
//* C: Compile the output from the precompiler
//*********************************************************************
//C       EXEC PGM=CCNDRVR,
//             COND=((4,LT,PC),(4,LT,PCC)),
//             PARM=('MAR(1,80) NOSEQ LO RENT LOCALE("SAA")')
//STEPLIB  DD  DISP=SHR,DSN=CBC.SCCNCMP
//SYSLIB   DD  DISP=SHR,DSN=CEE.SCEEH.H
//         DD  DISP=SHR,DSN=DSN910.SDSNC.H
//SYSLIN   DD  DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSDA,
//             SPACE=(32000,(30,30)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//SYSPRINT DD  SYSOUT=*
//SYSCPRT  DD  SYSOUT=*
//SYSTERM  DD  DUMMY
//SYSIN    DD  DSN=&&DSNHOUT,DISP=(OLD,DELETE)
//SYSUT1   DD  UNIT=SYSDA,DISP=(NEW,PASS),
//             SPACE=(32000,(30,30)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//SYSUT2   DD  UNIT=SYSDA,DISP=(NEW,PASS),
//             SPACE=(32000,(30,30)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//SYSUT3   DD  UNIT=SYSDA,DISP=(NEW,PASS),
//             SPACE=(32000,(30,30)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//SYSUT4   DD  UNIT=SYSDA,DISP=(NEW,PASS),
//             SPACE=(32000,(30,30)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//SYSUT5   DD  UNIT=SYSDA,DISP=(NEW,PASS),
//             SPACE=(32000,(30,30)),
//             DCB=(RECFM=FB,LRECL=3200,BLKSIZE=12800)
//SYSUT6   DD  UNIT=SYSDA,DISP=(NEW,PASS),
//             SPACE=(32000,(30,30)),
//             DCB=(RECFM=FB,LRECL=3200,BLKSIZE=12800)
//SYSUT7   DD  UNIT=SYSDA,DISP=(NEW,PASS),
//             SPACE=(32000,(30,30)),
//             DCB=(RECFM=FB,LRECL=3200,BLKSIZE=12800)
//SYSUT8   DD  UNIT=SYSDA,DISP=(NEW,PASS),
//             SPACE=(32000,(30,30)),
//             DCB=(RECFM=FB,LRECL=3200,BLKSIZE=12800)
//SYSUT9   DD  UNIT=SYSDA,DISP=(NEW,PASS),
//             SPACE=(32000,(30,30)),
//             DCB=(RECFM=VB,LRECL=137,BLKSIZE=882)
//SYSUT10  DD  SYSOUT=*
//SYSUT14  DD  UNIT=SYSDA,DISP=(NEW,PASS),
//             SPACE=(32000,(30,30)),
//             DCB=(RECFM=FB,LRECL=3200,BLKSIZE=12800)
//*
//*********************************************************************
//* PLKED: Pre-linkedit the object module from the C compiler
//*********************************************************************
//PLKED   EXEC PGM=EDCPRLK,COND=((4,LT,PC),(4,LT,PCC),(4,LT,C))
//STEPLIB  DD  DISP=SHR,DSN=CEE.SCEERUN
//SYSMSGS  DD  DISP=SHR,
//             DSN=CEE.SCEEMSGP(EDCPMSGE)
//SYSLIB   DD  DUMMY
//SYSIN    DD  DSN=&&LOADSET,DISP=(OLD,DELETE)
//SYSMOD   DD  DSN=&&PLKSET,UNIT=SYSDA,DISP=(MOD,PASS),
//             SPACE=(32000,(30,30)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//SYSDEFSD DD  DUMMY
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//*
//*********************************************************************
//* LKED: Linkedit the output from the pre-linkeditor
//*********************************************************************
//LKED    EXEC PGM=IEWL,
//             COND=((4,LT,PC),(4,LT,PCC),(4,LT,C),(4,LT,PLKED)),
//             PARM='MAP'
//SYSLIB   DD  DISP=SHR,DSN=CEE.SCEELKED
//         DD  DISP=SHR,DSN=DSN910.SDSNLOAD
//SYSLIN   DD  DSN=&&PLKSET,DISP=(OLD,DELETE)
//         DD  DDNAME=SYSIN
//SYSLMOD  DD  DSN=&USER..RUNLIB.LOAD(&MEM),
//             DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  SPACE=(32000,(30,30)),UNIT=SYSDA
//*DSNHSQL PEND         REMOVE * FOR USE AS INSTREAM PROCEDURE
