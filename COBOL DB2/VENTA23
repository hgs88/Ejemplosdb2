       IDENTIFICATION DIVISION.
       PROGRAM-ID. VENTAS2.
       AUTHOR. J.GAYAN.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. IBM-370.
       OBJECT-COMPUTER. IBM-370.
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT SALIDA  ASSIGN TO SALIDA.
       DATA DIVISION.
       FILE SECTION.
       FD  SALIDA
           BLOCK CONTAINS 0 RECORDS
           LABEL RECORD IS STANDARD
           RECORDING MODE IS F
           RECORD 144 CHARACTERS
           DATA RECORD IS REG-SALIDA.
       01  REG-SALIDA PIC X(144).
       WORKING-STORAGE SECTION.
      **CURSOR PARA VENTAS   *******************************************
           EXEC SQL DECLARE CUR_VENTAS CURSOR FOR
              SELECT  TVENT_COD_VENDEDOR,
                      TVENT_COD_PRODUCTO,
                      TVENT_FECHA,
                      TVENT_KILOS
              FROM VENTAS
              WHERE    TVENT_FECHA > :WFECINF
              AND      TVENT_FECHA < :WFECSUP
              ORDER BY TVENT_COD_VENDEDOR,
                       TVENT_COD_PRODUCTO,
                       TVENT_FECHA
           END-EXEC.
       01  DCLVENTAS.
           10 TVENT-COD-VENTA      PIC S9(6)V USAGE COMP-3.
           10 TVENT-COD-VENDEDOR   PIC S9(4)V USAGE COMP-3.
           10 TVENT-COD-PRODUCTO   PIC S9(4)V USAGE COMP-3.
           10 TVENT-FECHA          PIC X(8).
           10 TVENT-KILOS          PIC S9(6)V9(2) USAGE COMP-3.
      **CURSOR PARA VENDEDORES  ****************************************
           EXEC SQL DECLARE CUR_VENDED CURSOR FOR
              SELECT  TVEND_COD_VENDEDOR,
                      TVEND_NOMBRE
              FROM VENDED
              WHERE    TVEND_COD_VENDEDOR > 0
           END-EXEC.
       01  DCLVENDED.
           10 TVEND-COD-VENDEDOR   PIC S9(4)V USAGE COMP-3.
           10 TVEND-NOMBRE         PIC X(30).
      **CURSOR PARA PRODUCTOS   ****************************************
           EXEC SQL DECLARE CUR_PRODUC CURSOR FOR
              SELECT   TPROD_COD_PRODUCTO,
                       TPROD_NOM_PRODUCTO
              FROM PRODUC
              WHERE    TPROD_COD_PRODUCTO > 0
           END-EXEC.
       01  DCLPRODUC.
           10 TPROD-COD-PRODUCTO   PIC S9(4)V USAGE COMP-3.
           10 TPROD-NOM-PRODUCTO   PIC X(20).
           EXEC SQL
              INCLUDE SQLCA
           END-EXEC.
      ******************************************************************
       01 REG-ENTRADA.
          02 S-COD-VENDEDOR   PIC 9(4).
          02 S-COD-PRODUCTO  PIC 9(4).
          02 S-FECHA.
             04 S-A    PIC 9(4).
             04 S-M    PIC 99.
             04 S-D    PIC 99.
          02 S-KILOS       PIC 9(6)V99.
       77  FE PIC X.
       77  WCONTA   PIC 9(5) VALUE 0.
       77  WSQLCODE PIC ---9.
       77  WFECINF  PIC X(8) VALUE '20000000'.
       77  WFECSUP  PIC X(8) VALUE '20010000'.
       77  A  PIC 99.
       77  W-COD-VENDEDOR  PIC 9(4).
       77  W-COD-PRODUCTO  PIC 9(4).
       77  WTAB-PROD-FIN PIC 99.
       77  WTAB-VEND-FIN PIC 99.
       77  WTAB-PROD-NEXT PIC 99 VALUE 1.
       77  WTAB-VEND-NEXT PIC 99 VALUE 1.
       01  FILLER.
           02 WKILOS PIC 9(6)V99 OCCURS 12.
           02 WTAB-PROD PIC X(30) OCCURS 20.
           02 WTAB-VEND PIC X(30) OCCURS 20.
       01  CABECERA1.
           03 FILLER PIC X(11)   VALUE 'VENDEDOR   '.
           03 CAB-COD-VENDEDOR   PIC ZZZ9.
           03 FILLER         PIC XX VALUE SPACES.
           03 CAB-NOM-VENDEDOR   PIC X(30).
       01  CABECERA2.
           03 FILLER PIC X(4)   VALUE  'COD.'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(20)   VALUE  '   PRODUCTO  '.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  'ENERO'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  'FEBRERO'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  'MARZO  '.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  'ABRIL  '.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  'MAYO   '.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  'JUNIO  '.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  'JULIO  '.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  'AGOSTO '.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  'SEPTIEM'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  'OCTUBRE'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  'NOVIEMB'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  'DICIEMB'.
       01  CABECERA25.
           03 FILLER PIC X(4)   VALUE  '----'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(20)   VALUE  '-------------'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  '--------'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  '--------'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  '--------'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  '--------'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  '--------'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  '--------'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  '--------'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  '--------'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  '--------'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  '--------'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  '--------'.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 FILLER PIC X(8)  VALUE  '--------'.
       01  CABECERA3.
           03 CAB-COD-PRODUCTO   PIC ZZZ9.
           03 FILLER         PIC X(2) VALUE SPACES.
           03 CAB-NOM-PRODUCTO   PIC X(20).
           03 FILLER     OCCURS 12.
           05 CAB-KILOS      PIC ZZZZ9,99.
           05 FILLER         PIC X(2).
       PROCEDURE DIVISION.
       ABRIR.
           OPEN OUTPUT SALIDA
           EXEC SQL OPEN CUR_VENTAS END-EXEC
           EXEC SQL OPEN CUR_PRODUC END-EXEC
           EXEC SQL OPEN CUR_VENDED END-EXEC
           PERFORM LLENAR-TABLAS
           MOVE 0 TO FE
           PERFORM  READ-VENTAS
           PERFORM  UNTIL FE = 1
            MOVE S-COD-VENDEDOR TO W-COD-VENDEDOR
               PERFORM UNTIL W-COD-VENDEDOR  =  WTAB-VEND-NEXT
                 MOVE WTAB-VEND(WTAB-VEND-NEXT) TO CAB-NOM-VENDEDOR
                 MOVE WTAB-VEND-NEXT TO  CAB-COD-VENDEDOR
                 PERFORM IMPRIMIR-CABECERA
                 ADD 1 TO  WTAB-VEND-NEXT
               PERFORM UNTIL WTAB-PROD-NEXT > WTAB-PROD-FIN
                 MOVE WTAB-PROD(WTAB-PROD-NEXT) TO CAB-NOM-PRODUCTO
                 MOVE WTAB-PROD-NEXT TO  CAB-COD-PRODUCTO
                 PERFORM IMPRIMIR-LINEA-PRODUCTO
                 ADD 1 TO  WTAB-PROD-NEXT
               END-PERFORM
               END-PERFORM
              MOVE WTAB-VEND(W-COD-VENDEDOR) TO CAB-NOM-VENDEDOR
              MOVE W-COD-VENDEDOR  TO  CAB-COD-VENDEDOR
              ADD 1 TO  WTAB-VEND-NEXT
            PERFORM IMPRIMIR-CABECERA
             PERFORM  UNTIL S-COD-VENDEDOR NOT = W-COD-VENDEDOR OR
                       FE = 1
               MOVE S-COD-PRODUCTO TO W-COD-PRODUCTO
               PERFORM RESET-WKILOS
               PERFORM UNTIL W-COD-PRODUCTO  =  WTAB-PROD-NEXT
                 MOVE WTAB-PROD(WTAB-PROD-NEXT) TO CAB-NOM-PRODUCTO
                 MOVE WTAB-PROD-NEXT TO  CAB-COD-PRODUCTO
                 PERFORM IMPRIMIR-LINEA-PRODUCTO
                 ADD 1 TO  WTAB-PROD-NEXT
               END-PERFORM
               PERFORM  UNTIL S-COD-PRODUCTO NOT = W-COD-PRODUCTO OR
                       FE = 1
                  ADD  S-KILOS TO WKILOS(S-M)
                  PERFORM  READ-VENTAS
               END-PERFORM
               MOVE WTAB-PROD(W-COD-PRODUCTO) TO CAB-NOM-PRODUCTO
               MOVE W-COD-PRODUCTO TO  CAB-COD-PRODUCTO
               PERFORM IMPRIMIR-LINEA-PRODUCTO
               ADD 1 TO  WTAB-PROD-NEXT
             END-PERFORM
               PERFORM RESET-WKILOS
               PERFORM UNTIL WTAB-PROD-NEXT > WTAB-PROD-FIN
                 MOVE WTAB-PROD(WTAB-PROD-NEXT) TO CAB-NOM-PRODUCTO
                 MOVE WTAB-PROD-NEXT TO  CAB-COD-PRODUCTO
                 PERFORM IMPRIMIR-LINEA-PRODUCTO
                 ADD 1 TO  WTAB-PROD-NEXT
               END-PERFORM
           END-PERFORM
               PERFORM RESET-WKILOS
               PERFORM UNTIL WTAB-VEND-NEXT > WTAB-VEND-FIN
                 MOVE WTAB-VEND(WTAB-VEND-NEXT) TO CAB-NOM-VENDEDOR
                 MOVE WTAB-VEND-NEXT TO  CAB-COD-VENDEDOR
                 PERFORM IMPRIMIR-LINEA-VENDEDOR
                 ADD 1 TO  WTAB-VEND-NEXT
               END-PERFORM
               PERFORM UNTIL WTAB-PROD-NEXT > WTAB-PROD-FIN
                 MOVE WTAB-PROD(WTAB-PROD-NEXT) TO CAB-NOM-PRODUCTO
                 MOVE WTAB-PROD-NEXT TO  CAB-COD-PRODUCTO
                 PERFORM IMPRIMIR-LINEA-PRODUCTO
                 ADD 1 TO  WTAB-PROD-NEXT
               END-PERFORM
           DISPLAY ' TOTAL REGISTROS LEIDOS   ' WCONTA
           CLOSE SALIDA
           EXEC SQL CLOSE CUR_VENTAS END-EXEC
           EXEC SQL CLOSE CUR_PRODUC END-EXEC
           EXEC SQL CLOSE CUR_VENDED END-EXEC
           STOP RUN.
       IMPRIMIR-CABECERA.
           MOVE 1 TO WTAB-PROD-NEXT
           WRITE REG-SALIDA FROM CABECERA1 END-WRITE
           WRITE REG-SALIDA FROM CABECERA2 END-WRITE
           WRITE REG-SALIDA FROM CABECERA25 END-WRITE.
       IMPRIMIR-LINEA-PRODUCTO.
           PERFORM  VARYING A FROM 1 BY 1 UNTIL A > 12
               MOVE  WKILOS(A)  TO CAB-KILOS(A)
           END-PERFORM
           WRITE REG-SALIDA FROM CABECERA3 END-WRITE.
       RESET-WKILOS.
           PERFORM  VARYING A FROM 1 BY 1 UNTIL A > 12
             MOVE 0 TO WKILOS(A)
           END-PERFORM.
       LLENAR-TABLAS.
           MOVE  0 TO FE A
           PERFORM READ-PRODUCTO UNTIL FE = 1
           MOVE A TO WTAB-PROD-FIN
           MOVE  0 TO FE A
           PERFORM READ-VENDEDOR UNTIL FE = 1
           MOVE A TO WTAB-VEND-FIN.
       IMPRIMIR-LINEA-VENDEDOR.
           MOVE 1 TO WTAB-PROD-NEXT
           MOVE WTAB-VEND(WTAB-VEND-NEXT) TO CAB-NOM-VENDEDOR
           MOVE WTAB-VEND-NEXT TO  CAB-COD-VENDEDOR
           WRITE REG-SALIDA FROM CABECERA1 END-WRITE
           WRITE REG-SALIDA FROM CABECERA2 END-WRITE
           WRITE REG-SALIDA FROM CABECERA25 END-WRITE.
       READ-VENTAS.
           EXEC SQL
              FETCH CUR_VENTAS
              INTO :TVENT-COD-VENDEDOR,
                   :TVENT-COD-PRODUCTO,
                   :TVENT-FECHA,
                   :TVENT-KILOS
             END-EXEC.
             MOVE SQLCODE TO WSQLCODE
           EVALUATE TRUE
             WHEN SQLCODE = ZEROES
               ADD 1 TO WCONTA
               MOVE TVENT-COD-VENDEDOR TO  S-COD-VENDEDOR
               MOVE TVENT-COD-PRODUCTO TO  S-COD-PRODUCTO
               MOVE TVENT-FECHA        TO  S-FECHA
               MOVE TVENT-KILOS        TO  S-KILOS
             WHEN SQLCODE = +100
               MOVE 1 TO FE
               DISPLAY '---> NO EXISTE REGISTRO'
             WHEN OTHER
               DISPLAY 'ERROR ACCESO DB2. SQLCODE: ' WSQLCODE
               MOVE 1 TO FE
           END-EVALUATE.
       READ-PRODUCTO.
           EXEC SQL
              FETCH CUR_PRODUC
              INTO :TPROD-COD-PRODUCTO,
                   :TPROD-NOM-PRODUCTO
             END-EXEC.
             MOVE SQLCODE TO WSQLCODE
           EVALUATE TRUE
             WHEN SQLCODE = ZEROES
              ADD 1 TO A
              MOVE TPROD-NOM-PRODUCTO  TO WTAB-PROD(A)
             WHEN SQLCODE = +100
               MOVE 1 TO FE
               DISPLAY '---> FIN FICHERO PRODUCTO'
             WHEN OTHER
               DISPLAY 'ERROR ACCESO PRODUCTOS. SQLCODE: ' WSQLCODE
               MOVE 1 TO FE
           END-EVALUATE.
       READ-VENDEDOR.
           EXEC SQL
              FETCH CUR_VENDED
              INTO :TVEND-COD-VENDEDOR,
                   :TVEND-NOMBRE
             END-EXEC.
             MOVE SQLCODE TO WSQLCODE
           EVALUATE TRUE
             WHEN SQLCODE = ZEROES
              ADD 1 TO A
              MOVE TVEND-NOMBRE TO WTAB-VEND(A)
             WHEN SQLCODE = +100
               MOVE 1 TO FE
               DISPLAY '---> FIN FICHERO VENDEDOR'
             WHEN OTHER
               DISPLAY 'ERROR ACCESO VENDEDOR. SQLCODE: ' WSQLCODE
               MOVE 1 TO FE
           END-EVALUATE.
